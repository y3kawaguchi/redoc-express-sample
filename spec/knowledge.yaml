openapi: "3.0.0"
info:
  version: 1.0.0
  title: knowledge
  license:
    name: MIT
servers:
  - url: http://localhost:3000/v1
paths:
  /articles:
    get:
      summary: List all articles
      operationId: listArticles
      tags:
        - articles
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of articles
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Articles"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a article
      operationId: createArticles
      tags:
        - articles
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /articles/{articleId}:
    get:
      summary: Info for a specific article
      operationId: showArticleById
      tags:
        - articles
      parameters:
        - name: articleId
          in: path
          required: true
          description: The id of the article to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Article:
      type: object
      required:
        - author_id
        - title
        - content
      properties:
        author_id:
          type: integer
          format: int64
          example: 1000000001
        title:
          type: string
          example: 【redoc】カッコいいAPI仕様書の作り方
        content:
          type: string
          example: あーして、こーして。。。
    Articles:
      type: array
      items:
        $ref: "#/components/schemas/Article"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string